/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.2/userguide/building_java_projects.html
 */

plugins {
    id 'java-library'
    id 'eclipse'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation project(':api')
    implementation project(':greeting-core')
    implementation project(':greeting-french')

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    
    // JSR-330 dependency injection with Guice
    api "com.google.inject:guice:5.0.1"

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
    
    // javax.inject with JPMS support
	//implementation 'com.guicedee.services:javax.inject:1.1.1.4-jre14'
	implementation 'jakarta.inject:jakarta.inject-api:1.0.3'
	
	implementation 'org.slf4j:slf4j-api:1.7.32'
	implementation 'ch.qos.logback:logback-classic:1.2.9'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

java {
    toolchain {
    	languageVersion.set(JavaLanguageVersion.of(14))
    }
}
